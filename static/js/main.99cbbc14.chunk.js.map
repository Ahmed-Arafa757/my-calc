{"version":3,"sources":["App.js","reportWebVitals.js","index.js","CalculatorFunctionsHandler.js","CalculatorDisplay.js"],"names":["App","Fragment","CalculatorFunctionsHandler","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","EnterEqual","x","eval","getElementsByTagName","value","console","log","EnterNumber","n","EnterOperator","o","EnterClear","onEqualPressed","this","onNumberPressed","onOperatorPressed","onClearPressed","Component","CalculatorDisplay","props","border","colSpan","className","type","onClick","e","target"],"mappings":"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","file":"static/js/main.99cbbc14.chunk.js","sourcesContent":["import \"./App.css\";\nimport React from \"react\";\nimport CalculatorFunctionsHandler from \"./CalculatorFunctionsHandler\";\n\n\n\nexport default function App() {\n\n    return (\n\n        <React.Fragment>\n\n            <CalculatorFunctionsHandler />\n\n        </React.Fragment>\n    )\n\n\n}\n\n\n\n\n\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import \"./App.css\";\r\nimport React, { Component } from \"react\";\r\nimport CalculatorDisplay from './CalculatorDisplay'\r\n\r\nexport default class CalculatorFunctionsHandler extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        < CalculatorDisplay\r\n          onEqualPressed={this.EnterEqual}\r\n          onNumberPressed={this.EnterNumber}\r\n          onOperatorPressed={this.EnterOperator}\r\n          onClearPressed={this.EnterClear}\r\n        />\r\n     </React.Fragment>\r\n    );\r\n  }\r\n\r\n  EnterEqual = () => {\r\n    var x = eval(document.getElementsByTagName(\"input\")[0].value);\r\n    console.log(x);\r\n    document.getElementsByTagName(\"input\")[0].value = x;\r\n  };\r\n\r\n  EnterNumber = (n) => {\r\n    console.log(n);\r\n    document.getElementsByTagName(\"input\")[0].value += n;\r\n  };\r\n\r\n  EnterOperator = (o) => {\r\n    console.log(o);\r\n    document.getElementsByTagName(\"input\")[0].value += o;\r\n  };\r\n\r\n  EnterClear = () => {\r\n    document.getElementsByTagName(\"input\")[0].value = \"\";\r\n  };\r\n}\r\n","import React from 'react';\r\n\r\n\r\nexport default function CalculatorDisplay(props) {\r\n    \r\n    return (\r\n      \r\n        <React.Fragment>\r\n          <table border=\"7\">\r\n            <tbody>\r\n              <tr>\r\n                <td colSpan=\"4\" className=\"td\">\r\n                  {\" \"}\r\n                  My Calculator{\" \"}\r\n                </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <td colSpan=\"3\">\r\n                  <input className=\"Answer\" type=\"text\" />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    type=\"button\"\r\n                    className=\"width\"\r\n                    value=\"=\"\r\n                    onClick={(e) => {\r\n                     props.onEqualPressed()\r\n                    }}\r\n                  />\r\n                </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    type=\"button\"\r\n                    className=\"width\"\r\n                    value=\"1\"\r\n                    onClick={(e) => {\r\n                      props.onNumberPressed(e.target.value);\r\n                    }}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    type=\"button\"\r\n                    className=\"width\"\r\n                    value=\"2\"\r\n                    onClick={(e) => {\r\n                      props.onNumberPressed(e.target.value);\r\n                    }}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    type=\"button\"\r\n                    className=\"width\"\r\n                    value=\"3\"\r\n                    onClick={(e) => {\r\n                      props.onNumberPressed(e.target.value);\r\n                    }}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    type=\"button\"\r\n                    className=\"width\"\r\n                    value=\"+\"\r\n                    onClick={(e) => {\r\n                      props.onOperatorPressed(e.target.value);\r\n                    }}\r\n                  />\r\n                </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    type=\"button\"\r\n                    className=\"width\"\r\n                    value=\"4\"\r\n                    onClick={(e) => {\r\n                      props.onNumberPressed(e.target.value);\r\n                    }}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    type=\"button\"\r\n                    className=\"width\"\r\n                    value=\"5\"\r\n                    onClick={(e) => {\r\n                      props.onNumberPressed(e.target.value);\r\n                    }}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    type=\"button\"\r\n                    className=\"width\"\r\n                    value=\"6\"\r\n                    onClick={(e) => {\r\n                      props.onNumberPressed(e.target.value);\r\n                    }}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    type=\"button\"\r\n                    className=\"width\"\r\n                    value=\"-\"\r\n                    onClick={(e) => {\r\n                      props.onOperatorPressed(e.target.value);\r\n                    }}\r\n                  />\r\n                </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    type=\"button\"\r\n                    className=\"width\"\r\n                    value=\"7\"\r\n                    onClick={(e) => {\r\n                      props.onNumberPressed(e.target.value);\r\n                    }}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    type=\"button\"\r\n                    className=\"width\"\r\n                    value=\"8\"\r\n                    onClick={(e) => {\r\n                      props.onNumberPressed(e.target.value);\r\n                    }}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    type=\"button\"\r\n                    className=\"width\"\r\n                    value=\"9\"\r\n                    onClick={(e) => {\r\n                      props.onNumberPressed(e.target.value);\r\n                    }}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    type=\"button\"\r\n                    className=\"width\"\r\n                    value=\"*\"\r\n                    onClick={(e) => {\r\n                      props.onOperatorPressed(e.target.value);\r\n                    }}\r\n                  />\r\n                </td>\r\n              </tr>\r\n\r\n              <td>\r\n                <input\r\n                  type=\"button\"\r\n                  className=\"width\"\r\n                  value=\"C\"\r\n                  onClick={(e) => {\r\n                    props.onClearPressed();\r\n                  }}\r\n                />\r\n              </td>\r\n              <td>\r\n                <input\r\n                  type=\"button\"\r\n                  className=\"width\"\r\n                  value=\"0\"\r\n                  onClick={(e) => {\r\n                    props.onNumberPressed(e.target.value);\r\n                  }}\r\n                />\r\n              </td>\r\n              <td>\r\n                <input\r\n                  type=\"button\"\r\n                  className=\"width\"\r\n                  value=\".\"\r\n                  onClick={(e) => {\r\n                    props.onNumberPressed(e.target.value);\r\n                  }}\r\n                />\r\n              </td>\r\n              <td>\r\n                <input\r\n                  type=\"button\"\r\n                  className=\"width\"\r\n                  value=\"/\"\r\n                  onClick={(e) => {\r\n                    props.onOperatorPressed(e.target.value);\r\n                  }}\r\n                />\r\n              </td>\r\n\r\n              <tr></tr>\r\n            </tbody>\r\n          </table>\r\n        </React.Fragment>\r\n     \r\n    );\r\n}"],"sourceRoot":""}